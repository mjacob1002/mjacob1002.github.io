{
  "basics": {
    "name": "Mathew Jacob",
    "email": "mjacob1002@gmail.com",
    "url": "https://mjacob1002.github.io",
    "profiles": [
      {
        "network": "Twitter",
        "username": "mat_jacob1002",
        "url": "https://x.com/mat_jacob1002"
      }
    ]
  },
  "work": [
    {
      "name": "Databricks",
      "position": "Software Engineering Intern",
      "startDate": "2023-05-15",
      "endDate": "2023-08-02",
      "summary": "On the ML Training team. Built the DeepspeedTorchDistributor, which makes it easy to launch distributed ML workloads using Deepspeed on Spark clusters. Also contributed to Huggingface Datasets to make it faster to read from Spark tables.",
      "highlights": ["Distributed Training", "Software Engineering", "Open Source"]
    },
    {
      "name": "Databricks Mosaic Research",
      "position": "Research Scientist Intern",
      "startDate": "2024-05-20",
      "endDate": "2024-08-09",
      "summary": "Worked on improving understand of RAG system performance and tradeoffs. Focused on rerankers and studied their behavior, resulting in a paper. Also generated Pareto curves mesasuring different trade-offs, such as cost-quality, for Databricks' internal use. My research helped guide Databricks Vector Search's reranking product roadmap",
      "highlights": ["Information Retrieval", "Empirical Machine Learning", "Research"]
    }
  ],
  
  "education": [
    {
      "institution": "University of Illinois Urbana-Champaign",
      "location": "Urbana, Illionis",
      "area": "Computer Science",
      "studyType": "Bachelor of Science",
      "startDate": "2021-09-01",
      "endDate": "2025-05-01",
    }
  ],

  "publications": [
    {
      "name": "Drowning in Documents: Consequences of Scaling Reranker Inference",
      "publisher": "arxiv",
      "releaseDate": "2024-11-18",
      "url": "https://arxiv.org/abs/2411.11767",
      "summary": "Discovered that on internal datasets, as well as hard academic datasets, modern SOTA rerankers have performance degredation problems as the number of documents to score from the retriever increases. This challenges the common information retrieval assumption that rerankers are strictly better ranking models than embeddings. Explored LLM-based reranking techniques and found them a potentially viable candidate for better reranking, as our experiments suggest they're both more robust and better quality."
    },
    {
      "name": "CkIO: Parallel Input for Over-Decomposed Task-Based Systems",
      "publisher": "arxiv",
      "releaseDate": "2024-11-27",
      "url": "https://arxiv.org/abs/2411.18593",
      "summary": "Described a framework for parallel reads in over-decomposed task-based systems like Charm++. Implemented this library and demonstrated the superior performance it can deliver."
    },
    {
      "name": "Eir: A Python Package for Epidemic Simulation",
      "publisher": "The Journal of Open Source Software",
      "releaseDate": "2021-06-10",
      "url": "https://joss.theoj.org/papers/10.21105/joss.03247",
      "summary": "Built a Python library that aims to help scientists simulate spread of epidemics while incorporate movement in the agents."
    }
  ]
}
